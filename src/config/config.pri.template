#Enable CUDA GPU support
#CONFIG += gpu-cuda

#Enable LIF controls/acquisition
#CONFIG += lif

#-----------------------------------------
# Library configuration
#
# You may need to specify custom paths etc
# for your OS. See qmake documentation for
# examples
#-----------------------------------------

unix:!macx: LIBS += -lqwt -lgsl -lm -lgslcblas


#------------------------------------------------
# The following defines select hardware implementations.
#
# If you have not enabled the lif or motor options above,
# you can ignore their corresponding entries below
# -----------------------------------------------

# FTMW Oscilloscope (0 = virtual, 1 = DSA71604C, 2 = MSO72004C, 3 = M4i2220x8, 4 = DSOx92004A, 5 = MSO64B, 6=DSOV204A, 7=DPO71254B, 8=DPO72004)
FTMWSCOPE=0

#Clocks. Include in a space-delimited list, up to 6 numbers
#For example:
#CLOCKS=0 0 1 3 2
#(0 = FixedClock, 1 = Valon 5009, 2 = Valon 5015, 3 = HP 83712B)
CLOCKS=0 0

#AWG (<0 None, 0 = virtual, 1 = AWG70002A, 2 = AWG7122B, 3 = AD9914, 4 = M8195A, 5 = AWG5000)
AWG=-1

#Pulse generator (<0 = None, 0 = virtual, 1 = Quantum Composers 9528+, 2 = Quantum Composers 9518, 3 = Quantum Composers 9214)
PGEN=-1

#Flow Controller (<0 = None, 0 = virtual, 1 = MKS 647C, 2 = MKS 946)
FC=-1

#IO Board (<0 = None, 0 = virtual, 1 = Labjack U3)
IOBOARD=-1

#GPIB controller (<0 = none, 0 = virtual, 1 = Prologix GPIB-LAN, 2 = Proligix GPIB-USB)
GPIB=-1

#pressure controller (<0 = none, 0 = virtual, 1 = Intellisys IQ Plus)
PC=-1

#temperature controller (<0 = none, 0 = virtual, 1 = Lakeshore 218)
TC=-1

###### LIF ONLY #####
#LIF Oscilloscope (0 = virtual, 1 = M4i2211x8)
LIFSCOPE=0

#LIF Laser (0 = virtual, 1 = Opolette)
LIFLASER=0
##### END LIF ONLY #####

#------------------------------------------------
# Space for custom include/lib paths
#------------------------------------------------

equals(IOBOARD,1)|allhardware {
    LIBS += -llabjackusb
}

equals(FTMWSCOPE,3)|equals(LIFSCOPE,1)|allhardware {
     LIBS += -lspcm_linux
}


#------------------------------
# CUDA compiler configuration
#------------------------------
gpu-cuda {
    DEFINES += BC_CUDA

    # Cuda sources
	CUDA_SOURCES += $$PWD/../modules/cuda/gpuaverager.cu

    # Path to cuda toolkit install
	CUDA_DIR      = /usr/local/cuda
	INCLUDEPATH  += $$CUDA_DIR/include -isystem /usr/include/qt5 -isystem /usr/include/qt5/QtCore
	QMAKE_LIBDIR += $$CUDA_DIR/lib64
	CUDA_INC = $$join(INCLUDEPATH,' -I','-I',' ')
	CUDA_INT
	LIBS += -L$$CUDA_DIR/lib64 -lcuda -lcudart
	# GPU architecture
	CUDA_ARCH     = sm_50
	NVCCFLAGS     = --compiler-options -use_fast_math --ptxas-options=-v -Xcompiler -fPIC -Xcompiler -Wno-attributes

    CONFIG(debug, debug|release) {
	    cuda_d.commands = $$CUDA_DIR/bin/nvcc -D_DEBUG -std=c++11 -m64 -O3 -arch=$$CUDA_ARCH -c $$NVCCFLAGS \
		               $$CUDA_INC ${QMAKE_FILE_NAME} -o ${QMAKE_FILE_OUT} \
					   2>&1 | sed -r \"s/\\(([0-9]+)\\)/:\\1/g\" 1>&2

        cuda_d.input = CUDA_SOURCES
		cuda_d.output = ${OBJECTS_DIR}${QMAKE_FILE_BASE}_cuda.o
		QMAKE_EXTRA_COMPILERS += cuda_d
	}
	else {
	    cuda.commands = $$CUDA_DIR/bin/nvcc -std=c++11 -m64 -O3 -arch=$$CUDA_ARCH -c $$NVCCFLAGS \
		             $$CUDA_INC $$LIBS ${QMAKE_FILE_NAME} -o ${QMAKE_FILE_OUT} \
					 2>&1 | sed -r \"s/\\(([0-9]+)\\)/:\\1/g\" 1>&2

        cuda.input = CUDA_SOURCES
		cuda.output = ${OBJECTS_DIR}${QMAKE_FILE_BASE}_cuda.o
		QMAKE_EXTRA_COMPILERS += cuda
	}
}

#------------------------------------------------
# Do not modify the following
# -----------------------------------------------

lif {
    DEFINES += BC_LIF
	DEFINES += BC_LIFSCOPE=$$LIFSCOPE
	DEFINES += BC_LIFLASER=$$LIFLASER
}
